# Wednesday morning, June 22nd 
1. Sharing
a. command-line vs PyCharm vs repl.it

* super-calculator mode
* command-line  (pythong) and editor file management

b. code editor options – configuration issues 

See ch. 2

Windows vs. mac editors - free/paid

* notepad / textedit
* Adobe Brackets
* JetBrains PyCharm

Online editors

* repl.it https://repl.it/languages/python3
* IDEOne https://ideone.com/

2. For-loops

for x in range(0, 3):
	print ("We're on time %d" % (x))
	
We're on time 0
We're on time 1
We're on time 2

for x in range(1, 11):
	for y in range(1, 11):
		print ('%d * %d = %d' % (x, y, x*y))

1 * 1 = 1
1 * 2 = 2
1 * 3 = 3
1 * 4 = 4
1 * 5 = 5
...


for i in range(4):
	for j in range(4):
		print("%d %d %d" % (i, j, i+j))
		
0 0 0
0 1 1
0 2 2
0 3 3
1 0 1
1 1 2
1 2 3
...

3. If else - if logic


4. Hands-on:“Rock-Scissors-Paper,7.8”



# Wednesday afternoon, June 22nd
1. Programmer-written functions

Easily defined functions.

def fun()
	...
	...
	...
	return...

def fun(n):
	counter = 0
	while counter < n:
		print(counter, end="")
		counter += 1
	print()
	return counter
	
fun(2)
fun(4)
fun(6)


def fun(n, m):
	counter = 0
	while counter < n:
		print(counter, end="")
		counter += m
	print()
	return counter

>>>fun(6,2)
024

2. Hands-on:“Password Protection,8.3 and 8.4”,“3-Question Quiz,8.5 and 9.1”


3. Entry point options in Python



4. Sharing: main() or notmain()?

print out the function with : __name__

What is a good way to test your functions? You can check for __main__ and use that for testing.

in functions.py, create a test:

if __name__ == "__main__":
	print(functionTest("R","R"))
